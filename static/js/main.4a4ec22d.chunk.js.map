{"version":3,"sources":["components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","Board","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","i","_this","squares","renderSquare","React","Component","Game","call","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","_this2","current","winner","moves","map","move","desc","jumpTo","Board_Board","handleClick","lines","_lines$i","slicedToArray","b","c","App","Game_Game","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4a4ec22d.chunk.js","sourcesContent":["import React from \"react\";\nimport './style.css';\n\nfunction Square(props) {\n\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button >\n    );\n\n}\n\nexport class Board extends React.Component {\n\n    renderSquare(i) {\n        return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;","import { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Board } from \"./Board\";\nimport './style.css';\n\nexport class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null)\n                }\n            ],\n            stepNumber: 0,\n            xIsNext: true\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares\n                }\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner) {\n            status = \"Winner: \" + winner;\n        } else {\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={i => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nexport default Game;","import './App.css';\nimport React from \"react\";\nimport { Game } from \"./components/Game\";\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}